---
- name: Adds Python MySQL support
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - python3-mysqldb

- name: Copy my.cnf config file
  ansible.builtin.template:
    src: my.cnf.j2
    dest: /etc/mysql/my.cnf
    mode: '644'
  notify:
    - restart mysql service

- name: Activate passwordless access for root user
  ansible.builtin.template:
    src: .my.cnf.j2
    dest: /root/.my.cnf
    mode: '400'

- name: Root password is present
  no_log: true
  community.mysql.mysql_user:
    name: "root"
    host_all: true
    password: "{{ mysql_root_password | mandatory }}"
    state: present
    login_unix_socket: "{{ login_unix_socket | default(omit) }}"

- name: Delete test databases
  community.mysql.mysql_db:
    name: test
    state: absent
    login_unix_socket: "{{ login_unix_socket | default(omit) }}"

- name: Delete anonymous users
  no_log: true
  community.mysql.mysql_user:
    name: ""
    state: absent
    host_all: true
    login_unix_socket: "{{ login_unix_socket | default(omit) }}"

- name: Secures the MySQL root user for IPV6 localhost (::1)
  no_log: true
  community.mysql.mysql_user:
    user: "root"
    password: "{{ mysql_root_password }}"
    host: "::1"

- name: Secures the MySQL root user for IPV4 localhost (127.0.0.1)
  no_log: true
  community.mysql.mysql_user:
    user: "root"
    password: "{{ mysql_root_password }}"
    host: "127.0.0.1"

- name: Secures the MySQL root user for localhost domain (localhost)
  no_log: true
  community.mysql.mysql_user:
    user: "root"
    password: "{{ mysql_root_password }}"
    host: "localhost"

- name: Secures the MySQL root user for server_hostname domain
  no_log: true
  community.mysql.mysql_user:
    user: 'root'
    password: "{{ mysql_root_password }}"
    host: "{{ ansible_fqdn }}"
