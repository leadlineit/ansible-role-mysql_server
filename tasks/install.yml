---
- name: Update repo cache and install a few prerequisite packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - apt-transport-https
    - gnupg2

- name: Add official MySQL Server package authentication key
  ansible.builtin.apt_key:
    data: "{{ lookup('file', 'mysql_pubkey.asc') }}"
    state: present

- name: Add the MySQL Server repository to APT sources
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    state: present
    filename: mysql_server
    mode: '0644'
  with_items:
    - "deb http://repo.mysql.com/apt/debian/ {{ ansible_distribution_release }} mysql-8.0"

- name: Set MySQL Server root password
  ansible.builtin.debconf:
    name: mysql-community-server
    question: mysql-community-server/root-pass
    value: "{{ mysql_root_password }}"
    vtype: password
  changed_when: false

- name: Confirm MySQL Server root password
  ansible.builtin.debconf:
    name: mysql-community-server
    question: mysql-community-server/re-root-pass
    value: "{{ mysql_root_password }}"
    vtype: password
  changed_when: false

- name: Enable Legacy Authentication Method for MySQL Server
  ansible.builtin.debconf:
    name: mysql-community-server
    question: mysql-server/default-auth-override
    value: Use Legacy Authentication Method (Retain MySQL 5.x Compatibility)
    vtype: select

- name: Install MySQL Community Server
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - mysql-server
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Start and eneble MySQL Community Server service
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true
